<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!--The inspiration and alot of code came from here Credit to https://engy.us/blog/2020/01/01/implementing-a-custom-window-title-bar-in-wpf/-->
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{StaticResource ControlButtonForeground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
					x:Name="border"
					Background="{StaticResource ControlButtonBackground}"
					BorderThickness="0"
					SnapsToDevicePixels="true">
                        <ContentPresenter
						x:Name="contentPresenter"
						Margin="0"
						HorizontalAlignment="Center"
						VerticalAlignment="Center"
						Focusable="False"
						RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <!--<Setter TargetName="border" Property="Background" Value="{DynamicResource TestThis }"/>-->
                            <Setter TargetName="border" Property="Background" Value="{StaticResource ControlButtonOverColor }"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="Blue"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--The inspiration and alot of code came from here Credit to https://engy.us/blog/2020/01/01/implementing-a-custom-window-title-bar-in-wpf/-->
    <!--I added the triggers to change the Path-->
    <Style x:Key="RestoreButton" TargetType="Button" >
        <Setter Property="Foreground" Value="{StaticResource ControlButtonForeground}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=SkinnedWindow, Path=WindowState}" Value="Normal">
                <Setter Property="Button.ToolTip" Value="Maximize" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="border" Background="{StaticResource ControlButtonBackground}" BorderThickness="0" SnapsToDevicePixels="true">
                                    <ContentPresenter
										x:Name="contentPresenter"
										Margin="0"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Focusable="False"
										RecognizesAccessKey="True" />
                                </Border>
                                <Path Width="46" Height="32" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z " Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border"  Property="Background" Value="{StaticResource ControlButtonOverColor }"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border"  Property="Background" Value="{StaticResource ControlButtonPressed}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding ElementName=SkinnedWindow, Path=WindowState}" Value="Maximized">
                <Setter Property="Button.ToolTip" Value="Restore" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Grid>
                                <Border x:Name="border" Background="{StaticResource ControlButtonBackground }" BorderThickness="0" SnapsToDevicePixels="true">
                                    <ContentPresenter
										x:Name="contentPresenter"
										Margin="0"
										HorizontalAlignment="Center"
										VerticalAlignment="Center"
										Focusable="False"
										RecognizesAccessKey="True" />
                                </Border>
                                <Path Width="46" Height="32" Data="M 18.5,12.5 H 25.5 V 19.5 H 18.5 Z M 20.5,12.5 V 10.5 H 27.5 V 17.5 H 25.5" Stroke="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type Button}}}" StrokeThickness="1" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ControlButtonOverColor }"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="true">
                                    <Setter TargetName="border" Property="Background" Value="{StaticResource ControlButtonPressed}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>